apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'org.moallemi.advanced-build-version'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'io.fabric'

advancedVersioning {
    nameOptions {
        versionMajor 1
        versionMinor 5
        versionPatch 1
    }

    outputOptions {
        renameOutput true
        nameFormat '${appName}-${buildType}-${versionName}'
    }
}
Properties funstream = new Properties()
Properties fabric = new Properties()
try {
    funstream.load(file('funstream.properties').newDataInputStream())
    fabric.load(file('fabric.properties').newDataInputStream())
}
catch (Exception ex) {
    throw new GradleException("Missing .properties, check files");
}

android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
        }
        debug {
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
        }
    }

    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    defaultConfig {
        applicationId "com.slx.funstream.chat"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode advancedVersioning.versionCode
        versionName advancedVersioning.versionName
        vectorDrawables.useSupportLibrary = true

        buildConfigField "String", "CONSUMER_KEY", "\"${fabric.getProperty("apiKey")}\""
        buildConfigField "String", "CONSUMER_SECRET", "\"${fabric.getProperty("apiSecret")}\""
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix '.debug'
            //ext.enableCrashlytics = false
            buildConfigField "String", "APP_KEY", "\"${funstream.getProperty("app_key")}\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "String", "APP_KEY", "\"${funstream.getProperty("app_key")}\""
        }
    }

    productFlavors {
        full {
            applicationId = "com.slx.funstream.client"
            versionName advancedVersioning.versionName + "-client"
            versionCode 1
        }
        chat {
            applicationId = "com.slx.funstream.chat"
            versionCode advancedVersioning.versionCode
            versionName advancedVersioning.versionName
        }
    }

    repositories{
        maven {
            url 'http://dl.bintray.com/amulyakhare/maven'
        }
    }
}

ext {
    support_lib_version = "23.2.1"
    dagger_version = "2.0.2"
    retrofit_version = "2.0.0"
    okhttp_version = "3.2.0"
    gson_version = "2.6.2"
    rxlifecycle_version = "0.5.0"
    rxbinding_version = "0.4.0"
    rxandroid_version = "1.1.0"
    rxjava_version = "1.1.2"
    espresso_version = "2.2.2"
    espresso_rules_version = "0.4.1"
}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:recyclerview-v7:${support_lib_version}"
    compile "com.android.support:cardview-v7:${support_lib_version}"
    compile "com.android.support:appcompat-v7:${support_lib_version}"
    compile "com.android.support:design:${support_lib_version}"

    // DI
    compile 'com.jakewharton:butterknife:7.0.1'
    compile "com.google.dagger:dagger:${dagger_version}"
    apt "com.google.dagger:dagger-compiler:${dagger_version}"
    provided 'org.glassfish:javax.annotation:10.0-b28'
    // Network
    compile "com.squareup.retrofit2:retrofit:${retrofit_version}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retrofit_version}"
    compile "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'
    compile "com.squareup.okhttp3:okhttp:${okhttp_version}"
    compile "com.google.code.gson:gson:${gson_version}"
    // WS
    // compile 'org.java-websocket:Java-WebSocket:1.3.0'
    //    compile('io.socket:socket.io-client:0.6.1') {
    //        exclude group: 'org.json', module: 'json'
    //    }
    compile 'io.socket:engine.io-client:0.6.2'
    compile files('libs/socket.io-client-0.6.3-SNAPSHOT.jar')
//    compile ('io.socket:socket.io-client:0.7.0') {
//        // excluding org.json which is provided by Android
//        exclude group: 'org.json', module: 'json'
//    }
    compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    // JWT
    compile 'com.nimbusds:nimbus-jose-jwt:3.10'

    // rx
    compile "io.reactivex:rxandroid:${rxandroid_version}"
    compile "io.reactivex:rxjava:${rxjava_version}"
    compile "com.trello:rxlifecycle:${rxlifecycle_version}"
    compile "com.trello:rxlifecycle-components:${rxlifecycle_version}"
    compile "com.jakewharton.rxbinding:rxbinding-support-v4:${rxbinding_version}"
    compile "com.jakewharton.rxbinding:rxbinding-appcompat-v7:${rxbinding_version}"

    //debug
    compile 'com.facebook.stetho:stetho:1.3.1'
    compile 'com.facebook.stetho:stetho-okhttp3:1.3.1'

    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    //specific for Full client version
    fullCompile project(':vitamio')

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.easytesting:fest:1.0.16'
    testCompile 'org.assertj:assertj-core:1.7.0'
    testCompile('org.robolectric:robolectric:3.0') {
        exclude group: 'commons-logging',
                module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents',
                module: 'httpclient'
    }

//    androidTestCompile ("com.android.support.test.espresso:espresso-core:${espresso_version}") {
//        exclude group: 'com.android.support', module: 'appcompat'
//        exclude group: 'com.android.support', module: 'support-v4'
//        exclude group: 'com.android.support', module: 'support-annotations'
//    }
//    androidTestCompile "com.android.support.test:runner:${espresso_rules_version}"
//    androidTestCompile "com.android.support.test:rules:${espresso_rules_version}"
//    androidTestCompile "com.android.support:support-annotations:${support_lib_version}"
//    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${espresso_version}") {
//        exclude group: 'com.android.support', module: 'appcompat'
//        exclude group: 'com.android.support', module: 'support-v4'
//        exclude group: 'com.android.support', module: 'support-annotations'
//        exclude module: 'recyclerview-v7'
//    }
}
